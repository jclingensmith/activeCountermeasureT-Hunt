ActiveCounterMeasures Threat Hunting Lecture
============================================

github.com/rmccarth/activecountermeasurest-hunt.git


# Course Information

Presenters: John Strand, Shelby, Bill Sterns (www.sterns.org), Keith, Chris

ACM Website: https://www.activecountermeasures.com

VM Download Location: https://www.activecountermeasures.com/cyber-threat-hunting-training-course/

username:password
thunt:aybab2u


Slide Deck PDF Location: https://www.activecountermeasures.com/cyber-threat-hunting-training-course/

Course participants received a threat hunting level 1 certificate upon completion.

# Job Posting Information

ACM does not post job openings anywhere - applicants are considered based on referral.

# Understanding Phishing Email Mentality

Change mentality of the user around phishing emails. Provide reward incentives for being the first person to flag or tag an email as a phish. 

## Lecture Logistics


5 modules, 45 minutes each
20 minute break after module 2 and 4



# Basics of C2

Theme: "Why Do Attackers Infect Networks?"


1) Historically - Mass Propagation
2) Now - Monetization!   "Bad Guy with a Business Model"
	- own internal systems

Direct call-backs to origin IP makes attribution too easy, so setup C2. 

Host "checks in" with the C2 server to see if there are any commands waiting for the host. If yes: execute command.

**Email makes a great C2 server!**

## Problem Space

Dwell-time is on average about 6 months and orgs typically discover breach from a 3rd party. 

Reference: 2019 Verizon Breach Report

0 companies that had PoS device compromise were self-discovered breaches.

Need to cut down dwell-time

**threat hunting** = understand normal internal network patterns to detect bad actors

## State of Security Today

tooling today typically surround preventing access and incident response
- RITA identifies the gap of detecting when controls fail, and need to trigger incident response.

**syslog was not designed for security** 
  - designed in 1988
  - 2 components (type of log entry aka 'facility', and severity)
  - **no** security related log entry, the severity is not related to security
  - top level of severity '2/critical' = failure in the systems primary applicatino e.g. crash.

**Hunting C2 Not Enough**
 - Randomware attacks, logic bombs, self-propagating worms - some forms of profit do not require a C2 server.

## Where to Start

Full PCAP - highest level of detail, expensive to store the data. May limit organization to hour or two timeframes. **C2 may be activated every few hours** 
Zeek - can capture larger timeframes with less packet-level detail (essentially netflow)

Analyze communications in pairs (ignoring internal to internal, sometimes makes sense since system-to-system communications within the network can generate a lot of false positivs e.g. the use of powershell)

**Suricata**  

C2 signature of DNScat vs normal traffic sometimes the two look VERY similar.

 
IDS/IPS is not dead and can be useful, but struggles with identifying unique/custom/adverse C2 channel traffic.

# What to Look for First  

1) Persistent Connections
   - A google search is fine, a google search every 3 minutes with the exact same query is suspicious.
   - thinking in a time-based format is useful, but can also think in **frequency-based** constraints to the data.  
   - Easy to identify persistent connections over a long period of time (but beaconing is a bit more difficult)
   - **Beacon** = short, repetative signal generation. 
   - R statistical suite, datamash (common tools used to identify)
   - K-means clustering - works to identify constant-rate beaconing.
   - Jitter is missed by K-means clustering. **Jitter** = variation in the interval time. 
   - Session-size analysis helps to address this problem, more on Jitter later in the lecture.
   - Session-size --> when the C2 issues no command, that session duration is typically always the same. Very indicative. Only differs when the C2 server activates a command to be run.   
> Attackers have figured out how to maintain a connection to C2 server in random intervals, even when no command is issued, this is used to make the connnection look like a typical connection. "Top Talkers" is now useless, and there only needs to be a few beacons per day. 
   - Lab will address ways to still detect this. 
   - Beacon activity is rare, but not necessarily evil. 

2) Signs of Automation
   - 



3) IP 2 IP communications
   - C2 can jump ports and protocols! Immediate re-establishment of connections. 


# Investigating Beaconing

Is the IP on a blacklist? Why?

Domain < 7 days old?  
> Attackers register the domain and do C2/spam etc and then refund the purchase.  

Signature Analysis  

Type of Protocol  

# Threat Hunting Process

Goals: Identify Persistent Connections (typically internal -> external)  
Subgoal: Be able to justify each connection as business-relevant  

Why start with persistent connections?   
  - Threat intelligence feeds rely on the same malware being pushed to everyone
  - Attackers want to monitize their engagement so custom malware coming from original IP addresses is missed.

> IP addresses can host multipe website. Blacklisting a single IP address can result in multiple legitimate sites being blocked. 

  - Digital Ocean/Google/Amazon getting blocked. 
  - Origin of intelligence can sometimes be questionable. 

## Technique vs. Methodology  

Brocut and grep are solid technical tools that may not scale super well. The approach is the methodology. 

The ability to manually verify an automated solution is valuable, so knowing the technique is worth. 

## Red Team vs Bad Guys

Bad guys typically have an objective beyond accessing the network and setting up a C2. Bad guys need to MONITIZE. 

Red team doesn't care, just needs to demonstrate successful execution. 

> If you can catch the red team, you won't have a problem with the monitizing bad guys. 

# UDP  

Connection duration is calculated based on how frequently the UDP packets travel from same srcIP,dstIP and srcPort,dstPort.

# TCP  

Fairly straightforward for connection duration.  

# ICMP & GRE  

Much more complicated. 


# Threat Hunting Air-Gapped Networks  

> Creating profiles for each device on the network to identify what the endpoints interacts with, and on average how much data is sent from the device. 

Actually establish that the system is airgapped.  

-----BREAK 1-----


# Finer-Grained Analyis of Beacons

Looking at frequency of connection establishment instead of a time-based x-axis allows the most frequent connections to "stick out like a sore thumb"

Can also look at the time between established connections (again, Jitter a problem)

Session sizes tend to be the same until a C2 activation. 
  - Also serves as a guideline for what the activity might have been. 
  - e.g. small activation data probably equals a stored procedure or an "ls" command.
  - e.g. 6GB transfer = crisis moment, data exfiltration.

## Tshark

```bash
tshark -r suspect-dns.pcap -T fields -E separator=, -e ip.src -e -ip.dst -e ip.proto -e udp.dstport -e ip.len -e frame.time_delta_displayed ip.src ==192.168.88.2 | head -n 10
```
-T: allows the user to specify the fields that need to be displayed


# Session Size Analysis w/R

extract the session size, pass it into R for analysis and display the min, max, mean session size. mean ~= min may indicate a heartbeat. If stdev is small and close to the mean - min, could be a heartbeat. 

# Addressing Jitter

A longer duration period will allow for the variance to be normalized. **Looks like a flat line!**  

## Protocols that utilize long session durations by default. 

BGP (Border Gateway Protocol) - opens long session durations
Chat Programs 
Dynamic Web Pages (weather) - java applet might query the weather every few minutes

**Look for conditions where beaconing might be normal, and filter these out**  

NTP (Network Time Protocol) - if set at 20 minute schedule, check the time; this looks like a beacon but its completely benign. White list the NTP severs your org is using.

DNS Forwarding - intended DNS misdirecting to stop users from going to malicious sites by accident. Essentially makes all of the IPs on the network talk to a single few DNS servers.

Honeypots setup on the network are effective, but communicate with a SASS service over DNS. 

# Developing Threat Rating Systems  

Major Modifiers: Change the point scale drastically
Minor Modifiers: Change the points scale by lesser point values

Major Modifier:
- Beacon Activity / Persistent Connections
- 60-80 points

Minor Modifiers:
- <= 30 points
- Protocol compliance - unexpected app or port usage / confirm business need | non-standard port / 443 raw data 
- External IP address
- Internal IP address


Negative Points OK - e.g. trusted certificate found

**Zeek has decoders for the 50 most common applications** - these run traffic through all of the decoders until there is a match. 

e.g.

```bash
cat conn.log | bro-cut id.orig_h id.resp_h id.resp_p proto service orig_ip_bytes resp_ip_bytes
```

Too many FQDNs (Fully Qualified Domain Names)
- MS/Google/Amazon = 200-600 FQDNs exposed
- Typical is about <10

**Greater than 1000 FQDNs is suspicious** 

In the remote domain if there are a ton of FQDNs it means that domain has been registering tons of C2 servers to be resolved to. Typically DNS b/c environments almost always let DNS out. 

# Detecting C2 over DNS  

Capture all DNS traffic

- The longer the capture time the better. 
- Since they need to send a command over the DNS response, they need to avoid DNS caching. So they rotate between a bunch of DNS FQDN. 

```bash
tshark -r thunt-lab.pcapng -T fields -e dns.qry.name | sort | uniq | rev | cut -d "." -f 1-2 | rev | sort | uniq -c | sort -rn | head -10
```

rev --> reverse the order of the characters

> this type of command can be run against Zeek but also against raw pcaps that get rotated. 

## Bonus DNS  

See which hosts actually are visiting the domains with the most FQDNs. If one host-highly likely talking to C2.  

----BREAK 2-----

Passer - activeCM open source tool that inventories the system. - all passive. active version of the traffic is also to be released.  

HIPAA - vendors sometimes maintain access to systems via remote access team viewer etc, RITA and AI-hunter cna aid in identifying these violations.  

**ELK will be integrated with RITA**  
- Will be focused on sysmon data to tie alerts/IPs/ports to executables that initiate connections. 
- Called Silky


**HELK** is a thing and is elasticsearch with AI and hunting  
https://github.com/Cyb3rWard0g/HELK

---END BREAK 2---

Looking for unique HTTP user agents:  

- Can filter user agent strings by what you know exists in your network.  

MORE MODIFIERS
==============

Modern C2 uses HTTPS protocol, SSL signing key should all be unique, if not unique, flag. Can hash the SSL signing keys and compare to known list. - minor modifier 

Invalid Certificate Checks  - if the long connection is signed with an invalid certificate, flag and add minor modifier. 

Check target IP address (ASN, geolocation, IP delegation, PTR Records)
Is target organization recognized?  

**Found a beacon? Check what other hosts are talking to that IP address, maybe they are also compromised? maybe they are C2 communication backups**  

# Internal System Monitoring

Internal IP's may be acting maliciously, a tool like Carbon Black may allow the organization to track DHCP assignments and what each host is running/supposed to be doing. 

# Passer - Open Source Tool available from activeCM.  

Works inline and identifies the lay of the land by watching the traffic that is going by.

e.g. Passer identifies the 10.10.10.10 host as having port 443 open since it is notices traffic from 20.20.20.20 going to 10.10.10.10 over port 443 with a syn ack response. 

Windows Internal Monitoring

sysmon - selky will integrate sysmon with applications that connect to external IPs. 

# After Assigning Points

Add up the points for the host, and disposition the IP. 
Safe -> add to whitelist
Scary -> trigger incident response
Still unsure -> collect more data

# Threat Scoring System Quick Review:  

Points Possible (1-100)
1) Persistent Connections
	Internal to External
	Beacons
	Long Cnx
	Major Score Modifier

2) Analyze Protocol & Endpoint Attributes
	Evidence of untrusted communications
	Minor score modifiers

# tcpdump

to capture pcaps when system boots configure script to run at startup:  

```bash
mkdir -p /opt/pcaps
screen -S capture -t capture -d -m bash -c "tcpdump -ieth0 -G 3600 -w '/opt/pcaps/`hostname -s`.%Y%m%d%H%M%S.pcap' -z bzip2"
```

# tshark - user agents

```bash
tshark -r sample.pcap -T fields -e http.user_agent tcp.dstort==80 | sort | uniq -c | sort -n | head -10
```

# RITA  

designed to specifically go after command and control. 

can correlate output with open source threat feeds
can correlate with alexa top 1 million sites

spamhaus
known c2 servers
feed consolidation
 
